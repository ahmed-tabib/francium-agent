; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32216.1 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	rxa2_initial_hash
PUBLIC	rxa2_fill_first_blocks
PUBLIC	randomx_argon2_index_alpha
PUBLIC	randomx_argon2_initialize
PUBLIC	randomx_argon2_validate_inputs
PUBLIC	randomx_argon2_fill_memory_blocks
;	COMDAT pdata
pdata	SEGMENT
$pdata$rxa2_initial_hash DD imagerel $LN192
	DD	imagerel $LN192+62
	DD	imagerel $unwind$rxa2_initial_hash
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$rxa2_initial_hash DD imagerel $LN192+62
	DD	imagerel $LN192+84
	DD	imagerel $chain$2$rxa2_initial_hash
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$rxa2_initial_hash DD imagerel $LN192+84
	DD	imagerel $LN192+2370
	DD	imagerel $chain$3$rxa2_initial_hash
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$rxa2_initial_hash DD imagerel $LN192+2370
	DD	imagerel $LN192+2652
	DD	imagerel $chain$4$rxa2_initial_hash
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$rxa2_initial_hash DD imagerel $LN192+2652
	DD	imagerel $LN192+2712
	DD	imagerel $chain$5$rxa2_initial_hash
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$rxa2_fill_first_blocks DD imagerel $LN11
	DD	imagerel $LN11+177
	DD	imagerel $unwind$rxa2_fill_first_blocks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fill_memory_blocks_st DD imagerel fill_memory_blocks_st
	DD	imagerel fill_memory_blocks_st+34
	DD	imagerel $unwind$fill_memory_blocks_st
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$fill_memory_blocks_st DD imagerel fill_memory_blocks_st+34
	DD	imagerel fill_memory_blocks_st+137
	DD	imagerel $chain$1$fill_memory_blocks_st
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$fill_memory_blocks_st DD imagerel fill_memory_blocks_st+137
	DD	imagerel fill_memory_blocks_st+156
	DD	imagerel $chain$2$fill_memory_blocks_st
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$randomx_argon2_index_alpha DD imagerel $LN16
	DD	imagerel $LN16+207
	DD	imagerel $unwind$randomx_argon2_index_alpha
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$randomx_argon2_initialize DD imagerel $LN15
	DD	imagerel $LN15+63
	DD	imagerel $unwind$randomx_argon2_initialize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$randomx_argon2_initialize DD imagerel $LN15+63
	DD	imagerel $LN15+217
	DD	imagerel $chain$1$randomx_argon2_initialize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$randomx_argon2_initialize DD imagerel $LN15+217
	DD	imagerel $LN15+247
	DD	imagerel $chain$2$randomx_argon2_initialize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$randomx_argon2_fill_memory_blocks DD imagerel $LN29
	DD	imagerel $LN29+29
	DD	imagerel $unwind$randomx_argon2_fill_memory_blocks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$randomx_argon2_fill_memory_blocks DD imagerel $LN29+29
	DD	imagerel $LN29+51
	DD	imagerel $chain$1$randomx_argon2_fill_memory_blocks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$randomx_argon2_fill_memory_blocks DD imagerel $LN29+51
	DD	imagerel $LN29+153
	DD	imagerel $chain$3$randomx_argon2_fill_memory_blocks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$randomx_argon2_fill_memory_blocks DD imagerel $LN29+153
	DD	imagerel $LN29+171
	DD	imagerel $chain$4$randomx_argon2_fill_memory_blocks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$randomx_argon2_fill_memory_blocks DD imagerel $LN29+171
	DD	imagerel $LN29+182
	DD	imagerel $chain$5$randomx_argon2_fill_memory_blocks
;	COMDAT xdata
xdata	SEGMENT
$chain$5$randomx_argon2_fill_memory_blocks DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+29
	DD	imagerel $unwind$randomx_argon2_fill_memory_blocks
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$randomx_argon2_fill_memory_blocks DD 021H
	DD	imagerel $LN29+29
	DD	imagerel $LN29+51
	DD	imagerel $chain$1$randomx_argon2_fill_memory_blocks
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$randomx_argon2_fill_memory_blocks DD 040a21H
	DD	0c640aH
	DD	0a3405H
	DD	imagerel $LN29+29
	DD	imagerel $LN29+51
	DD	imagerel $chain$1$randomx_argon2_fill_memory_blocks
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$randomx_argon2_fill_memory_blocks DD 040a21H
	DD	0de40aH
	DD	0b5405H
	DD	imagerel $LN29
	DD	imagerel $LN29+29
	DD	imagerel $unwind$randomx_argon2_fill_memory_blocks
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$randomx_argon2_fill_memory_blocks DD 020601H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$randomx_argon2_initialize DD 021H
	DD	imagerel $LN15
	DD	imagerel $LN15+63
	DD	imagerel $unwind$randomx_argon2_initialize
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$randomx_argon2_initialize DD 040821H
	DD	0957408H
	DD	0946404H
	DD	imagerel $LN15
	DD	imagerel $LN15+63
	DD	imagerel $unwind$randomx_argon2_initialize
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$randomx_argon2_initialize DD 031d19H
	DD	090010bH
	DD	03004H
	DD	imagerel __GSHandlerCheck
	DD	0470H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$randomx_argon2_index_alpha DD 040a01H
	DD	02640aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$fill_memory_blocks_st DD 021H
	DD	imagerel fill_memory_blocks_st
	DD	imagerel fill_memory_blocks_st+34
	DD	imagerel $unwind$fill_memory_blocks_st
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$fill_memory_blocks_st DD 040a21H
	DD	0b640aH
	DD	0a3405H
	DD	imagerel fill_memory_blocks_st
	DD	imagerel fill_memory_blocks_st+34
	DD	imagerel $unwind$fill_memory_blocks_st
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fill_memory_blocks_st DD 061001H
	DD	0d7410H
	DD	0c5410H
	DD	0e00c7210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$rxa2_fill_first_blocks DD 072119H
	DD	08c340fH
	DD	086010fH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0420H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$rxa2_initial_hash DD 021H
	DD	imagerel $LN192
	DD	imagerel $LN192+62
	DD	imagerel $unwind$rxa2_initial_hash
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$rxa2_initial_hash DD 021H
	DD	imagerel $LN192+62
	DD	imagerel $LN192+84
	DD	imagerel $chain$2$rxa2_initial_hash
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$rxa2_initial_hash DD 020421H
	DD	026f404H
	DD	imagerel $LN192+62
	DD	imagerel $LN192+84
	DD	imagerel $chain$2$rxa2_initial_hash
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$rxa2_initial_hash DD 061621H
	DD	0277416H
	DD	028640dH
	DD	0313404H
	DD	imagerel $LN192
	DD	imagerel $LN192+62
	DD	imagerel $unwind$rxa2_initial_hash
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$rxa2_initial_hash DD 062c19H
	DD	029011eH
	DD	0d011e013H
	DD	0500dc00fH
	DD	imagerel __GSHandlerCheck
	DD	0120H
; Function compile flags: /Ogtpy
;	COMDAT randomx_argon2_fill_memory_blocks
_TEXT	SEGMENT
position$2 = 32
$T1 = 48
instance$ = 80
randomx_argon2_fill_memory_blocks PROC			; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 178
$LN29:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rcx
; Line 179
	test	rcx, rcx
	je	$LN3@randomx_ar
	mov	eax, DWORD PTR [rcx+28]
	test	eax, eax
	je	$LN3@randomx_ar
; Line 166
	mov	QWORD PTR [rsp+88], rbp
	mov	QWORD PTR [rsp+104], r14
	xor	r14d, r14d
	mov	ebp, r14d
	cmp	DWORD PTR [rcx+12], r14d
	jbe	SHORT $LN7@randomx_ar
	mov	QWORD PTR [rsp+80], rbx
	mov	QWORD PTR [rsp+96], rsi
	npad	3
$LL8@randomx_ar:
; Line 167
	mov	esi, r14d
$LL11@randomx_ar:
; Line 168
	mov	ebx, r14d
	test	eax, eax
	je	SHORT $LN9@randomx_ar
	npad	6
$LL14@randomx_ar:
; Line 169
	mov	DWORD PTR position$2[rsp], ebp
; Line 171
	lea	rdx, QWORD PTR $T1[rsp]
	mov	DWORD PTR position$2[rsp+4], ebx
	mov	rcx, rdi
	mov	BYTE PTR position$2[rsp+8], sil
	mov	DWORD PTR position$2[rsp+12], r14d
	movaps	xmm0, XMMWORD PTR position$2[rsp]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	call	QWORD PTR [rdi+56]
	mov	eax, DWORD PTR [rdi+28]
	inc	ebx
	cmp	ebx, eax
	jb	SHORT $LL14@randomx_ar
$LN9@randomx_ar:
; Line 167
	inc	esi
	cmp	esi, 4
	jb	SHORT $LL11@randomx_ar
; Line 166
	inc	ebp
	cmp	ebp, DWORD PTR [rdi+12]
	jb	SHORT $LL8@randomx_ar
	mov	rsi, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [rsp+80]
$LN7@randomx_ar:
; Line 182
	mov	r14, QWORD PTR [rsp+104]
	xor	eax, eax
	mov	rbp, QWORD PTR [rsp+88]
; Line 183
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN3@randomx_ar:
; Line 180
	mov	eax, -25
; Line 183
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
randomx_argon2_fill_memory_blocks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT randomx_argon2_validate_inputs
_TEXT	SEGMENT
context$ = 8
randomx_argon2_validate_inputs PROC			; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 186
	test	rcx, rcx
	jne	SHORT $LN2@randomx_ar
; Line 187
	lea	eax, QWORD PTR [rcx-25]
; Line 299
	ret	0
$LN2@randomx_ar:
; Line 191
	cmp	QWORD PTR [rcx+16], 0
	jne	SHORT $LN33@randomx_ar
; Line 192
	cmp	DWORD PTR [rcx+24], 0
	je	SHORT $LN33@randomx_ar
; Line 193
	mov	eax, -18
; Line 299
	ret	0
$LN33@randomx_ar:
; Line 206
	cmp	QWORD PTR [rcx+32], 0
	jne	SHORT $LN34@randomx_ar
; Line 207
	cmp	DWORD PTR [rcx+40], 0
	je	SHORT $LN34@randomx_ar
; Line 208
	mov	eax, -19
; Line 299
	ret	0
$LN34@randomx_ar:
; Line 212
	cmp	DWORD PTR [rcx+40], 8
	jae	SHORT $LN9@randomx_ar
; Line 213
	mov	eax, -6
; Line 299
	ret	0
$LN9@randomx_ar:
; Line 221
	cmp	QWORD PTR [rcx+48], 0
	jne	SHORT $LN13@randomx_ar
; Line 222
	cmp	DWORD PTR [rcx+56], 0
	je	SHORT $LN13@randomx_ar
; Line 223
	mov	eax, -20
; Line 299
	ret	0
$LN13@randomx_ar:
; Line 236
	cmp	QWORD PTR [rcx+64], 0
	jne	SHORT $LN18@randomx_ar
; Line 237
	cmp	DWORD PTR [rcx+72], 0
	je	SHORT $LN18@randomx_ar
; Line 238
	mov	eax, -21
; Line 299
	ret	0
$LN18@randomx_ar:
; Line 251
	mov	r8d, DWORD PTR [rcx+80]
	cmp	r8d, 8
	jb	SHORT $LN38@randomx_ar
; Line 259
	mov	edx, DWORD PTR [rcx+84]
	lea	eax, DWORD PTR [rdx*8]
	cmp	r8d, eax
	jb	SHORT $LN38@randomx_ar
; Line 264
	cmp	DWORD PTR [rcx+76], 1
	jae	SHORT $LN24@randomx_ar
; Line 265
	mov	eax, -12
; Line 299
	ret	0
$LN24@randomx_ar:
; Line 273
	cmp	edx, 1
	jae	SHORT $LN26@randomx_ar
; Line 274
	mov	eax, -16
; Line 299
	ret	0
$LN26@randomx_ar:
; Line 277
	cmp	edx, 16777215				; 00ffffffH
	jbe	SHORT $LN27@randomx_ar
; Line 278
	mov	eax, -17
; Line 299
	ret	0
$LN27@randomx_ar:
; Line 282
	mov	eax, DWORD PTR [rcx+88]
	cmp	eax, 1
	jae	SHORT $LN28@randomx_ar
; Line 283
	mov	eax, -28
; Line 299
	ret	0
$LN28@randomx_ar:
; Line 286
	cmp	eax, 16777215				; 00ffffffH
	jbe	SHORT $LN29@randomx_ar
; Line 287
	mov	eax, -29
; Line 299
	ret	0
$LN29@randomx_ar:
; Line 290
	cmp	QWORD PTR [rcx+96], 0
	mov	rdx, QWORD PTR [rcx+104]
	je	SHORT $LN36@randomx_ar
	test	rdx, rdx
	jne	SHORT $LN31@randomx_ar
; Line 291
	mov	eax, -23
; Line 299
	ret	0
$LN31@randomx_ar:
; Line 298
	xor	eax, eax
; Line 299
	ret	0
$LN36@randomx_ar:
; Line 294
	xor	eax, eax
	mov	ecx, -24
	test	rdx, rdx
	cmovne	eax, ecx
; Line 299
	ret	0
$LN38@randomx_ar:
; Line 260
	mov	eax, -14
; Line 299
	ret	0
randomx_argon2_validate_inputs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT randomx_argon2_initialize
_TEXT	SEGMENT
blockhash$ = 32
blockhash_bytes$1 = 112
__$ArrayPad$ = 1136
instance$ = 1168
context$ = 1176
randomx_argon2_initialize PROC				; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 385
$LN15:
	mov	r11, rsp
	push	rbx
	sub	rsp, 1152				; 00000480H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
; Line 389
	test	rcx, rcx
	je	$LN3@randomx_ar
	test	rdx, rdx
	je	$LN3@randomx_ar
; Line 400
	mov	r8d, DWORD PTR [rcx+36]
	mov	QWORD PTR [rcx+48], rdx
	lea	rcx, QWORD PTR blockhash$[rsp]
	mov	QWORD PTR [r11+24], rsi
	mov	QWORD PTR [r11+32], rdi
	call	rxa2_initial_hash
; Line 306
	xor	esi, esi
	mov	edi, esi
	cmp	DWORD PTR [rbx+28], esi
	jbe	SHORT $LN7@randomx_ar
	npad	11
$LL8@randomx_ar:
; Line 310
	lea	r8, QWORD PTR blockhash$[rsp]
	mov	DWORD PTR blockhash$[rsp+64], esi
	lea	rcx, QWORD PTR blockhash_bytes$1[rsp]
	mov	DWORD PTR blockhash$[rsp+68], edi
	call	randomx_blake2b_long
; Line 312
	mov	ecx, edi
	lea	rdx, QWORD PTR blockhash_bytes$1[rsp]
	imul	ecx, DWORD PTR [rbx+24]
	shl	rcx, 10
	add	rcx, QWORD PTR [rbx]
	call	load_block
; Line 316
	lea	r8, QWORD PTR blockhash$[rsp]
	mov	DWORD PTR blockhash$[rsp+64], 1
	lea	rcx, QWORD PTR blockhash_bytes$1[rsp]
	call	randomx_blake2b_long
; Line 318
	mov	ecx, edi
	lea	rdx, QWORD PTR blockhash_bytes$1[rsp]
	imul	ecx, DWORD PTR [rbx+24]
	inc	ecx
	shl	rcx, 10
	add	rcx, QWORD PTR [rbx]
	call	load_block
	inc	edi
	cmp	edi, DWORD PTR [rbx+28]
	jb	SHORT $LL8@randomx_ar
$LN7@randomx_ar:
; Line 410
	mov	rdi, QWORD PTR [rsp+1192]
	xor	eax, eax
	mov	rsi, QWORD PTR [rsp+1184]
	jmp	SHORT $LN1@randomx_ar
$LN3@randomx_ar:
; Line 390
	mov	eax, -25
$LN1@randomx_ar:
; Line 411
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1152				; 00000480H
	pop	rbx
	ret	0
randomx_argon2_initialize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT randomx_argon2_index_alpha
_TEXT	SEGMENT
instance$ = 8
position$ = 16
pseudo_rand$ = 24
same_lane$ = 32
randomx_argon2_index_alpha PROC				; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 90
$LN16:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
; Line 105
	xor	r10d, r10d
	mov	esi, r8d
	lea	r8, QWORD PTR [rcx+20]
	mov	r11, rdx
	mov	rbx, rcx
	cmp	DWORD PTR [rdx], r10d
	jne	SHORT $LN2@randomx_ar
; Line 107
	movzx	eax, BYTE PTR [rdx+8]
	test	al, al
	jne	SHORT $LN4@randomx_ar
; Line 109
	mov	edx, DWORD PTR [rdx+12]
	dec	edx
; Line 111
	jmp	SHORT $LN7@randomx_ar
$LN4@randomx_ar:
; Line 113
	imul	eax, DWORD PTR [r8]
	mov	ecx, DWORD PTR [rdx+12]
	test	r9d, r9d
	je	SHORT $LN6@randomx_ar
; Line 115
	lea	edx, DWORD PTR [rcx-1]
; Line 125
	add	edx, eax
	jmp	SHORT $LN7@randomx_ar
$LN6@randomx_ar:
; Line 120
	test	ecx, ecx
	mov	edx, r10d
	mov	r9d, -1					; ffffffffH
	cmove	edx, r9d
; Line 125
	add	edx, eax
	jmp	SHORT $LN7@randomx_ar
$LN2@randomx_ar:
; Line 128
	test	r9d, r9d
	je	SHORT $LN8@randomx_ar
; Line 129
	mov	ecx, DWORD PTR [rdx+12]
	mov	edx, DWORD PTR [rbx+24]
	sub	ecx, DWORD PTR [r8]
	dec	edx
	add	edx, ecx
; Line 132
	jmp	SHORT $LN7@randomx_ar
$LN8@randomx_ar:
; Line 134
	mov	edx, DWORD PTR [r8]
	mov	eax, edx
	neg	edx
	not	eax
	cmp	DWORD PTR [r11+12], r10d
	cmove	edx, eax
	add	edx, DWORD PTR [rcx+24]
$LN7@randomx_ar:
; Line 142
	mov	eax, 24
	mov	rcx, rsi
; Line 143
	imul	rcx, rcx
	lea	r9, QWORD PTR [rax+rbx]
; Line 144
	mov	eax, edx
	shr	rcx, 32					; 00000020H
	dec	edx
	imul	rcx, rax
	shr	rcx, 32					; 00000020H
	sub	rdx, rcx
; Line 150
	cmp	DWORD PTR [r11], r10d
	je	SHORT $LN13@randomx_ar
; Line 151
	movzx	eax, BYTE PTR [r11+8]
	cmp	al, 3
	je	SHORT $LN13@randomx_ar
	lea	r10d, DWORD PTR [rax+1]
	imul	r10d, DWORD PTR [r8]
$LN13@randomx_ar:
; Line 157
	mov	ecx, DWORD PTR [r9]
; Line 160
	mov	rbx, QWORD PTR [rsp+8]
	mov	rsi, QWORD PTR [rsp+16]
	mov	eax, r10d
	add	rax, rdx
	xor	edx, edx
	div	rcx
	mov	eax, edx
	ret	0
randomx_argon2_index_alpha ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT load64_native
_TEXT	SEGMENT
src$ = 8
load64_native PROC					; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\endian.h
; Line 47
	mov	rax, QWORD PTR [rcx]
; Line 48
	ret	0
load64_native ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT load64
_TEXT	SEGMENT
src$ = 8
load64	PROC						; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\endian.h
; Line 52
	mov	rax, QWORD PTR [rcx]
; Line 65
	ret	0
load64	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT store32
_TEXT	SEGMENT
dst$ = 8
w$ = 16
store32	PROC						; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\endian.h
; Line 69
	mov	DWORD PTR [rcx], edx
; Line 80
	ret	0
store32	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT load_block
_TEXT	SEGMENT
dst$ = 8
input$ = 16
load_block PROC						; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 74
	mov	r10, rdx
	mov	r11, rcx
; Line 76
	mov	eax, 2
	npad	5
$LL8@load_block:
; Line 77
	lea	r8d, DWORD PTR [rax-2]
	mov	r9d, r8d
	mov	r8, QWORD PTR [r10+r8*8]
	mov	QWORD PTR [r11+r9*8], r8
	lea	r8d, DWORD PTR [rax-1]
	mov	rcx, QWORD PTR [r10+r8*8]
	mov	QWORD PTR [r11+r8*8], rcx
	mov	ecx, eax
	lea	rdx, QWORD PTR [rcx*8]
	mov	rcx, QWORD PTR [rdx+r10]
	mov	QWORD PTR [rdx+r11], rcx
	lea	ecx, DWORD PTR [rax+1]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+2]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+3]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+4]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+5]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+6]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+7]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+8]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+9]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+10]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+11]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+12]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+13]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+14]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+15]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+16]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+17]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+18]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+19]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+20]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+21]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+22]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+23]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+24]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+25]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+26]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+27]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+28]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+29]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+30]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+31]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+32]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+33]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+34]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+35]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+36]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+37]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+38]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+39]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+40]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+41]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+42]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+43]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+44]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+45]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+46]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+47]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+48]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+49]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+50]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+51]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+52]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+53]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+54]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+55]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+56]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+57]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+58]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+59]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+60]
	mov	edx, ecx
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax+61]
	mov	edx, ecx
	add	eax, 64					; 00000040H
	mov	rcx, QWORD PTR [r10+rcx*8]
	mov	QWORD PTR [r11+rdx*8], rcx
	lea	ecx, DWORD PTR [rax-2]
	cmp	ecx, 128				; 00000080H
	jb	$LL8@load_block
; Line 79
	ret	0
load_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT fill_memory_blocks_st
_TEXT	SEGMENT
position$2 = 32
$T1 = 48
instance$ = 80
fill_memory_blocks_st PROC				; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 163
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 64					; 00000040H
; Line 166
	xor	r14d, r14d
	mov	rdi, rcx
	mov	ebp, r14d
	cmp	DWORD PTR [rcx+12], r14d
	jbe	SHORT $LN24@fill_memor
	mov	eax, DWORD PTR [rcx+28]
	mov	QWORD PTR [rsp+80], rbx
	mov	QWORD PTR [rsp+88], rsi
	npad	4
$LL4@fill_memor:
; Line 167
	mov	esi, r14d
$LL7@fill_memor:
; Line 168
	mov	ebx, r14d
	test	eax, eax
	je	SHORT $LN5@fill_memor
	npad	6
$LL10@fill_memor:
; Line 169
	mov	DWORD PTR position$2[rsp], ebp
; Line 171
	lea	rdx, QWORD PTR $T1[rsp]
	mov	DWORD PTR position$2[rsp+4], ebx
	mov	rcx, rdi
	mov	BYTE PTR position$2[rsp+8], sil
	mov	DWORD PTR position$2[rsp+12], r14d
	movaps	xmm0, XMMWORD PTR position$2[rsp]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	call	QWORD PTR [rdi+56]
	mov	eax, DWORD PTR [rdi+28]
	inc	ebx
	cmp	ebx, eax
	jb	SHORT $LL10@fill_memor
$LN5@fill_memor:
; Line 167
	inc	esi
	cmp	esi, 4
	jb	SHORT $LL7@fill_memor
; Line 166
	inc	ebp
	cmp	ebp, DWORD PTR [rdi+12]
	jb	SHORT $LL4@fill_memor
; Line 175
	mov	rsi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
$LN24@fill_memor:
; Line 176
	mov	rbp, QWORD PTR [rsp+96]
	xor	eax, eax
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r14
	ret	0
fill_memory_blocks_st ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT rxa2_fill_first_blocks
_TEXT	SEGMENT
blockhash_bytes$ = 32
__$ArrayPad$ = 1056
blockhash$ = 1104
instance$ = 1112
rxa2_fill_first_blocks PROC				; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 301
$LN11:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 1072				; 00000430H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 306
	xor	ebp, ebp
	mov	rbx, rdx
	mov	rsi, rcx
	mov	edi, ebp
	cmp	DWORD PTR [rdx+28], ebp
	jbe	SHORT $LN3@rxa2_fill_
$LL4@rxa2_fill_:
; Line 310
	mov	r8, rsi
	mov	DWORD PTR [rsi+64], ebp
	lea	rcx, QWORD PTR blockhash_bytes$[rsp]
	mov	DWORD PTR [rsi+68], edi
	call	randomx_blake2b_long
; Line 312
	mov	ecx, edi
	lea	rdx, QWORD PTR blockhash_bytes$[rsp]
	imul	ecx, DWORD PTR [rbx+24]
	shl	rcx, 10
	add	rcx, QWORD PTR [rbx]
	call	load_block
; Line 316
	mov	r8, rsi
	mov	DWORD PTR [rsi+64], 1
	lea	rcx, QWORD PTR blockhash_bytes$[rsp]
	call	randomx_blake2b_long
; Line 318
	mov	ecx, edi
	lea	rdx, QWORD PTR blockhash_bytes$[rsp]
	imul	ecx, DWORD PTR [rbx+24]
	inc	ecx
	shl	rcx, 10
	add	rcx, QWORD PTR [rbx]
	call	load_block
	inc	edi
	cmp	edi, DWORD PTR [rbx+28]
	jb	SHORT $LL4@rxa2_fill_
$LN3@rxa2_fill_:
; Line 321
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+1120]
	add	rsp, 1072				; 00000430H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
rxa2_fill_first_blocks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT rxa2_initial_hash
_TEXT	SEGMENT
value$ = 32
BlakeHash$ = 48
__$ArrayPad$ = 288
blockhash$ = 368
context$ = 376
type$ = 384
rxa2_initial_hash PROC					; COMDAT
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 323
$LN192:
; Line 327
	test	rdx, rdx
	je	$LN190@rxa2_initi
	mov	r11, rsp
	push	rbp
	push	r12
	push	r13
	push	r14
	lea	rbp, QWORD PTR [r11-104]
	sub	rsp, 328				; 00000148H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
; Line 323
	mov	r12d, r8d
	mov	r14, rdx
	mov	r13, rcx
; Line 327
	test	rcx, rcx
	je	$LN3@rxa2_initi
; Line 331
	mov	QWORD PTR [r11+32], rbx
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	mov	QWORD PTR [r11-40], rsi
	mov	edx, 64					; 00000040H
	mov	QWORD PTR [r11-48], rdi
	mov	QWORD PTR [r11-56], r15
	call	randomx_blake2b_init
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 333
	mov	eax, DWORD PTR [r14+84]
; Line 334
	mov	esi, 4
	mov	DWORD PTR value$[rsp], eax
	mov	r15d, esi
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN189@rxa2_initi
; Line 257
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	mov	edx, ecx
	lea	rax, QWORD PTR [rcx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN11@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
	sub	rbx, rcx
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN11@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
	npad	12
$LL10@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL10@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN11@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	jmp	SHORT $LN14@rxa2_initi
$LN189@rxa2_initi:
; Line 253
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN14@rxa2_initi:
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 336
	mov	eax, DWORD PTR [r14+8]
; Line 337
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN27@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN24@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN24@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
	npad	11
$LL23@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL23@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN24@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN27@rxa2_initi:
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 339
	mov	eax, DWORD PTR [r14+80]
; Line 340
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN40@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN37@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN37@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
$LL36@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL36@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN37@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN40@rxa2_initi:
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 342
	mov	eax, DWORD PTR [r14+76]
; Line 343
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN53@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN50@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN50@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
$LL49@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL49@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN50@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN53@rxa2_initi:
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 345
	mov	eax, DWORD PTR [r14+92]
; Line 346
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN66@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN63@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN63@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
$LL62@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL62@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN63@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN66@rxa2_initi:
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 348
	mov	DWORD PTR value$[rsp], r12d
; Line 349
	mov	r15, rsi
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN79@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN76@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN76@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
	npad	3
$LL75@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL75@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN76@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN79@rxa2_initi:
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 351
	mov	eax, DWORD PTR [r14+24]
; Line 352
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN92@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN89@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN89@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
$LL88@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL88@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN89@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN92@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 354
	mov	rdx, QWORD PTR [r14+16]
	test	rdx, rdx
	je	SHORT $LN4@rxa2_initi
; Line 355
	mov	r8d, DWORD PTR [r14+24]
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	call	randomx_blake2b_update
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN4@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 359
	mov	eax, DWORD PTR [r14+40]
; Line 360
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN105@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN102@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN102@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
	npad	6
$LL101@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL101@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN102@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN105@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 362
	mov	rdx, QWORD PTR [r14+32]
	test	rdx, rdx
	je	SHORT $LN5@rxa2_initi
; Line 363
	mov	r8d, DWORD PTR [r14+40]
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	call	randomx_blake2b_update
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN5@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 366
	mov	eax, DWORD PTR [r14+56]
; Line 367
	mov	r15, rsi
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN118@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN115@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	r15, rbx
; Line 268
	cmp	r15, 128				; 00000080H
	jbe	SHORT $LN115@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [r15-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	r15, rax
	npad	6
$LL114@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL114@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN115@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, r15
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
	add	ecx, r15d
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
$LN118@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 369
	mov	rdx, QWORD PTR [r14+48]
	mov	r15, QWORD PTR [rsp+304]
	test	rdx, rdx
	je	SHORT $LN6@rxa2_initi
; Line 370
	mov	r8d, DWORD PTR [r14+56]
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	call	randomx_blake2b_update
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN6@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	cmp	QWORD PTR BlakeHash$[rbp-176], 0
	lea	rdi, QWORD PTR value$[rsp]
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 374
	mov	eax, DWORD PTR [r14+72]
	mov	DWORD PTR value$[rsp], eax
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\blake2\blake2b.c
; Line 253
	jne	$LN131@rxa2_initi
; Line 257
	mov	edx, ecx
	lea	rax, QWORD PTR [rdx+4]
	cmp	rax, 128				; 00000080H
	jbe	$LN128@rxa2_initi
; Line 260
	mov	ebx, 128				; 00000080H
; Line 261
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	sub	rbx, rdx
	add	rcx, rdx
	mov	r8, rbx
	lea	rdx, QWORD PTR value$[rsp]
	call	memcpy
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 263
	lea	rdx, QWORD PTR BlakeHash$[rbp-160]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 263
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 77
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 263
	call	blake2b_compress
; Line 264
	xor	ecx, ecx
; Line 266
	lea	rdi, QWORD PTR value$[rsp]
	add	rdi, rbx
	mov	DWORD PTR BlakeHash$[rbp-32], ecx
	sub	rsi, rbx
; Line 268
	cmp	rsi, 128				; 00000080H
	jbe	SHORT $LN128@rxa2_initi
; Line 260
	lea	rbx, QWORD PTR [rsi-129]
	shr	rbx, 7
	inc	rbx
	imul	rax, rbx, -128				; ffffffffffffff80H
	add	rsi, rax
	npad	1
$LL127@rxa2_initi:
; Line 76
	mov	rax, QWORD PTR BlakeHash$[rsp+64]
; Line 270
	lea	rcx, QWORD PTR BlakeHash$[rsp]
; Line 76
	sub	rax, -128				; ffffffffffffff80H
; Line 270
	mov	rdx, rdi
; Line 76
	cmp	rax, 128				; 00000080H
	mov	QWORD PTR BlakeHash$[rsp+64], rax
; Line 77
	adc	QWORD PTR BlakeHash$[rsp+72], 0
; Line 270
	call	blake2b_compress
; Line 272
	sub	rdi, -128				; ffffffffffffff80H
	sub	rbx, 1
	jne	SHORT $LL127@rxa2_initi
	mov	ecx, DWORD PTR BlakeHash$[rbp-32]
$LN128@rxa2_initi:
; Line 275
	mov	eax, ecx
	mov	r8, rsi
	lea	rcx, QWORD PTR BlakeHash$[rbp-160]
	mov	rdx, rdi
	add	rcx, rax
	call	memcpy
; Line 276
	add	DWORD PTR BlakeHash$[rbp-32], esi
$LN131@rxa2_initi:
; File D:\dev\francium_network\francium_agent\src\ext\randomx\repo\src\argon2_core.c
; Line 377
	mov	rdx, QWORD PTR [r14+64]
	mov	rdi, QWORD PTR [rsp+312]
	mov	rsi, QWORD PTR [rsp+320]
	mov	rbx, QWORD PTR [rsp+392]
	test	rdx, rdx
	je	SHORT $LN7@rxa2_initi
; Line 378
	mov	r8d, DWORD PTR [r14+72]
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	call	randomx_blake2b_update
$LN7@rxa2_initi:
; Line 382
	mov	r8d, 64					; 00000040H
	lea	rcx, QWORD PTR BlakeHash$[rsp]
	mov	rdx, r13
	call	randomx_blake2b_final
$LN3@rxa2_initi:
; Line 383
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 328				; 00000148H
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
$LN190@rxa2_initi:
	ret	0
rxa2_initial_hash ENDP
_TEXT	ENDS
END
